@page "/derechoAgua/delete"
@inject HttpClient Http
@inject NavigationManager NavManager


<h3>Eliminar Derecho Agua</h3>

<div class="row">
    <div class="col-sm-12">
        <label class="form-label">ID del Derecho Agua a Eliminar</label>
        <input type="number" class="form-control" id="idDerechoAgua" @bind="derechoAguaId" />
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <button class="btn btn-danger" @onclick="DeleteDerechoAgua">Eliminar</button>
        <button class="btn btn-secondary" @onclick="BackToList">Regresar</button>
    </div>
</div>
<div class="row">
    <div class="col-sm-12">
        <span style="color:red; font-weight:bold">@error</span>
    </div>
</div>

@code {
    int derechoAguaId;
    string error = "";

    public async Task DeleteDerechoAgua()
    {
        try
        {
            // Realiza la solicitud HTTP DELETE
            var resultado = await Http.DeleteAsync($"DerechoAgua/{derechoAguaId}");

            // Verifica si la solicitud fue exitosa
            if (resultado.IsSuccessStatusCode)
            {
                BackToList(); // Redirige al listado o a otra página tras la eliminación
            }
            else
            {
                error = "Error al eliminar el derechoAgua.";
            }
        }
        catch (Exception ex)
        {
            // Manejo de excepciones y mensaje de error
            error = $"Error: {ex.Message}";
        }
    }

    // Navega de regreso al índice
    void BackToList()
    {
        NavManager.NavigateTo("/derechoAgua/index");
    }
}
